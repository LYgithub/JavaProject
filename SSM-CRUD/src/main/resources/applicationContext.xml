<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--  配置批量的执行操作  -->
    <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
        <constructor-arg name="executorType" value="BATCH" />
    </bean>

    <!--  配置  Msg 类  -->
    <bean class="com.kawyang.bean.Msg" id="msg" >
        <property name="code" value="200" />
        <property name="msg" value="成功！" />
    </bean>

    <context:component-scan base-package="com.kawyang" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!--    引入外部文件-->
    <context:property-placeholder location="classpath:dbconfig.properties"/>


    <!--  Spring 的配置文件  -->

    <!--✅  数据源、事务控制...  -->
    <bean  id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcurl}"/>
        <property name="user" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />
        <property name="driverClass" value="${jdbc.driver}" />
    </bean>

    <!--✅  MyBatis 整合  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
        <!--    指定MyBatis 全局配置的位置    -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="dataSource" ref="dataSource" />
        <!--指定Mapper文件的路径-->
        <property name="mapperLocations" value="classpath:com/kawyang/mapper/*.xml" />
    </bean>

    <!-- 配置扫描器 ,将myBatis 的接口实现加入到 ioc容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描所有的接口加入到 ioc中 -->
        <property name="basePackage" value="com.kawyang.dao" />
    </bean>

    <!--✅ 事务控制配置 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 控制数据源,数据源的开启和关闭 -->
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!--  面向切面  -->
    <aop:config>
        <aop:pointcut id="txPoint" expression="execution( * com.kawyang.service..*(..))"/>
        <!-- 配置事务增强 -->
        <aop:advisor  advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>

    <!-- 如何切入 ，transaction-manager 进行关联-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 切入点的所有方法都是事务方法-->
            <tx:method name="*"/>
            <!-- 调优-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
</beans>